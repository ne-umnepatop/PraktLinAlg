import numpy as np
from sklearn.cluster import KMeans
from sklearn.cluster import AgglomerativeClustering


def klus(A, V, k):
    V = V.T[:k]
    V=V.T
    # print(f'V=\n{V}\n')
    kmeans = KMeans(n_clusters=k)
    kmeans.fit(V)
    centroids = kmeans.cluster_centers_
    labels = kmeans.labels_
    print(f'при {k} {labels}')


a = [0 for i in range(225)]
a = np.array(a).reshape(15, 15)
a[0][0], a[0][1], a[0][2], a[2][0], a[1][0], a[0][3], a[3][0] = 3, -1, -1, -1, -1, -1, -1
a[1][1], a[1][0], a[1][2], a[1][3], a[1][12], a[12][1], a[0][1], a[3][1], a[2][1] = 4, -1, -1, -1, -1, -1, -1, -1, -1
a[2][2], a[2][0], a[2][1], a[2][3], a[3][2], a[1][2], a[0][2] = 3, -1, -1, -1, -1, -1, -1
a[3][3], a[3][1], a[3][2], a[3][4], a[3][0], a[1][3], a[2][3], a[4][3], a[0][3] = 4, -1, -1, -1, -1, -1, -1, -1, -1
a[4][4], a[4][3], a[4][5], a[4][6], a[4][7], a[3][4], a[5][4], a[6][4], a[7][4] = 4, -1, -1, -1, -1, -1, -1, -1, -1
a[5][5], a[5][6], a[5][7], a[5][8], a[6][5], a[7][5], a[8][5] = 4, -1, -1, -1, -1, -1, -1
a[6][6], a[6][7], a[6][14], a[7][6], a[14][6] = 4, -1, -1, -1, -1
a[7][7], a[7][9], a[9][7] = 4, -1, -1
a[8][8], a[8][9], a[8][5], a[8][12], a[8][13], a[13][8], a[12][8], a[9][8], a[5][8] = 4, -1, -1, -1, -1, -1, -1, -1, -1
a[9][9], a[9][10], a[9][13], a[10][9], a[13][9] = 4, -1, -1, -1, -1
a[10][10], a[10][11], a[10][12], a[10][13], a[11][10], a[12][10], a[13][10] = 4, -1, -1, -1, -1, -1, -1
a[11][11], a[11][12], a[11][13], a[12][11], a[13][11] = 3, -1, -1, -1, -1
a[12][12], a[12][13], a[13][12] = 5, -1, -1
a[13][13] = 5
a[14][14] = 1
print(a)

k = 3
V = np.array([[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
              [-0.77, -0.618, -0.77, -0.559, 0.185, 0.338, 0.529, 0.345, 0.135, 0.164, 0.041, 0.006, -0.084, 0.058, 1],
              [0.507, 0.27, 0.507, 0.469, 0.339, 0.127, 0.458, 0.117, -0.474, -0.52, -0.745, -0.81, -0.55, -0.695, 1],
              [0.131, 0.159, 0.131, -0.07, -0.608, -0.623, -0.318, -0.621, -0.124, -0.117, 0.256, 0.395, 0.234, 0.175,
               1],
              [0.83, 0.207, 0.83, -0.991, -2.913, 0.003, -1.945, -0.141, 5.002, 4.706, -0.915, -6.243, -0.451,
               1.021, 1]
              # [29.596, -60.049, 29.596, 11.967, 5.349, -116.701, -2.625, 109.366, -155.902, 155.034, 107.896, -17.667,
              #  -93.703, -3.158, 1],
              # [-6.533, 4.385, -6.533, 9.704, 7.163, -4.621, -3.157, -3.048, -0.235, 4.091, 2.223, -5.005, 2.676, 0.89, 1
              #  ]
              ]).T
np.set_printoptions(precision=2, suppress=True)
print(V.T[:3].T)
klus(a, V, 2)
klus(a, V, 3)
klus(a, V, 4)
klus(a, V, 5)
clustering = AgglomerativeClustering(n_clusters=3)
clustering.fit(a)
labels = clustering.labels_
print(labels)

